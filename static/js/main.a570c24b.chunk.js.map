{"version":3,"sources":["cloud.png","bg.jpg","api/fetchWeather.js","App.js","index.js"],"names":["module","exports","fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","search","e","key","appStyle","backgroundImage","bg","backgroundSize","height","textAlign","color","className","style","src","cloud","alt","width","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,4LCK9BC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACHC,IAAMC,IAJnB,kDAI4B,CAChCC,OAAQ,CACJC,EAAGL,EACHM,MAAO,SACPC,MAPI,sCAEY,uBACjBC,EADiB,EACjBA,KADiB,kBAQjBA,GARiB,2CAAH,sD,kCCgDVC,MA/Cf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNV,EADM,KACCW,EADD,OAEiBD,mBAAS,IAF1B,mBAENE,EAFM,KAEGC,EAFH,KAIPC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACA,UAAVc,EAAEC,IADQ,gCAEQjB,EAAaC,GAFrB,OAELQ,EAFK,OAIXK,EAAWL,GACXG,EAAS,IALE,2CAAH,sDASNM,EAAW,CACfC,gBAAgB,OAAD,OAASC,IAAT,KACfC,eAAgB,QAChBC,OAAQ,QACRC,UAAW,SACXC,MAAO,SAGT,OACE,yBAAKC,UAAU,MAAMC,MAAOR,GAC1B,yBAAKO,UAAU,WACf,yBAAKA,UAAU,QACb,yBAAKE,IAAKC,IAAOC,IAAI,OAAOC,MAAM,MAAMR,OAAO,SAEjD,yBAAKG,UAAU,WACb,2BAAOM,KAAK,OAAON,UAAU,SAASO,YAAY,iBAAiBC,MAAOhC,EAAOiC,SAAU,SAAClB,GAAD,OAAOJ,EAASI,EAAEmB,OAAOF,QAAQG,WAAYrB,IAEvIF,EAAQwB,MACP,6BACE,4BACE,8BAAOxB,EAAQyB,KAAf,KAAuBzB,EAAQ0B,IAAIC,UAErC,yBAAKf,UAAU,eACb,4BAAKgB,KAAKC,MAAM7B,EAAQwB,KAAKM,MAAM,6CCpCjDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a570c24b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloud.a1cb48a6.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.923a122e.jpg\";","import axios from 'axios';\r\n\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\r\nconst API_KEY = 'b4abaea432165eabcf9acaa2b344a617';\r\n\r\nexport const fetchWeather = async (query) => {\r\n    const {data} = await axios.get(URL, {\r\n        params: {\r\n            q: query,\r\n            units: 'metric',\r\n            APPID: API_KEY,\r\n        }\r\n    });\r\n    return data;\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { fetchWeather } from './api/fetchWeather';\nimport cloud from './cloud.png';\nimport bg from './bg.jpg';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = async (e) => {\n    if(e.key === 'Enter') {\n      const data = await fetchWeather(query);\n\n      setWeather(data);\n      setQuery('');\n    }\n  }\n\n  const appStyle = {\n    backgroundImage: `url(${bg})`,\n    backgroundSize: \"cover\",\n    height: \"100vh\",\n    textAlign: \"center\",\n    color: \"white\"\n  };\n\n  return (\n    <div className=\"App\" style={appStyle}>\n      <div className=\"animate\">\n      <div className=\"logo\">\n        <img src={cloud} alt=\"Logo\" width=\"200\" height=\"200\"></img>\n      </div>\n      <div className=\"weather\">\n        <input type=\"text\" className=\"search\" placeholder=\"Search City...\" value={query} onChange={(e) => setQuery(e.target.value)} onKeyPress={search}\n        />\n        {weather.main && (\n          <div>\n            <h2>\n              <span>{weather.name}, {weather.sys.country}</span>\n            </h2>\n            <div className=\"temperature\">\n              <h1>{Math.round(weather.main.temp)}<sup>&deg;C</sup></h1>\n            </div>\n          </div>\n        )}\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}